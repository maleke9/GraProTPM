classType components.Component
blockdiagramSpecification Main {
	methodBody calc {
		outPin active {
			connection_38, connection_40, connection_42, connection_44, connection_46, connection_48, connection_50, connection_53, connection_62, connection_64, connection_66, connection_68, connection_74, connection_76, connection_78, connection_80, connection_86, connection_90, connection_94
		}
	}
	simpleIdentifier components.veloCar.vfl at (-279, 105) {
		label at (0, -1)
		outPin {
			connection_93
		}
		sequenceCall {
			inPin
		}
	}
	complexIdentifier average_instance at (361, 81) size (18, 22) {
		label at (0, 1)
		methodCall components.lib.average.calc {
			argumentPin arg at (left, 1) connection_30
			argumentPin arg_2 at (left, 7) connection_31
			argumentPin arg_3 at (left, 13) connection_32
			argumentPin arg_4 at (left, 19) connection_33
			returnPin at (right, 0) {
				connection_54
			}
			sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier Integrator_instance at (141, 81) size (14, 4) {
		label at (0, 1)
		methodCall components.lib.Integrator.integrate {
			argumentPin inputVal at (left, 0) connection_95 {
				bendpoints (330, 0)
			}
			argumentPin dtVal at (left, 2) connection_21 {
				bendpoints (30, 0), (30, -200)
			}
			sequenceCall at (-30, -54) {
				inPin connection_94
			}
		}
		methodCall components.lib.Integrator.outVal {
			returnPin at (right, 1) {
				connection_39
			}
			sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier Integrator_instance1 at (141, 141) size (14, 4) {
		label at (0, 1)
		methodCall components.lib.Integrator.integrate {
			argumentPin inputVal at (left, 0) connection_47
			argumentPin dtVal at (left, 2) connection_20 {
				bendpoints (30, 0), (30, -140)
			}
			sequenceCall at (-70, -30) {
				inPin connection_46
			}
		}
		methodCall components.lib.Integrator.outVal {
			returnPin at (right, 1) {
				connection_41
			}
			sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier Integrator_instance2 at (141, 201) size (14, 4) {
		label at (0, 1)
		methodCall components.lib.Integrator.integrate {
			argumentPin inputVal at (left, 0) connection_49
			argumentPin dtVal at (left, 2) connection_19 {
				bendpoints (30, 0), (30, -80)
			}
			sequenceCall at (-70, -30) {
				inPin connection_48
			}
		}
		methodCall components.lib.Integrator.outVal {
			returnPin at (right, 1) {
				connection_43
			}
			sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier Integrator_instance3 at (141, 261) size (14, 4) {
		label at (0, 1)
		methodCall components.lib.Integrator.integrate {
			argumentPin inputVal at (left, 0) connection_51
			argumentPin dtVal at (left, 2) connection_18 {
				bendpoints (30, 0), (30, -20)
			}
			sequenceCall at (-70, -30) {
				inPin connection_50
			}
		}
		methodCall components.lib.Integrator.outVal {
			returnPin at (right, 1) {
				connection_45
			}
			sequenceCall {
				inPin
			}
		}
	}
	simpleIdentifier deltatime at (11, 305) {
		label at (0, -1)
		inPin outPin {
			connection_19, connection_20, connection_21, connection_18
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier components.distanceCar.sfl at (301, 95) {
		label at (0, -1)
		inPin connection_39
		outPin {
			connection_30
		}
		sequenceCall {
			inPin connection_38
		}
	}
	simpleIdentifier components.distanceCar.sfr at (301, 155) {
		label at (0, -1)
		inPin connection_41
		outPin {
			connection_31
		}
		sequenceCall {
			inPin connection_40
		}
	}
	simpleIdentifier components.distanceCar.srl at (301, 215) {
		label at (0, -1)
		inPin connection_43
		outPin {
			connection_32
		}
		sequenceCall {
			inPin connection_42
		}
	}
	simpleIdentifier components.distanceCar.srr at (301, 275) {
		label at (0, -1)
		inPin connection_45
		outPin {
			connection_33
		}
		sequenceCall {
			inPin connection_44
		}
	}
	simpleIdentifier components.veloCar.vfr at (21, 145) {
		label at (0, -1)
		outPin {
			connection_47
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier components.veloCar.vrl at (21, 205) {
		label at (0, -1)
		outPin {
			connection_49
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier components.veloCar.vrr at (21, 265) {
		label at (0, -1)
		outPin {
			connection_51
		}
		sequenceCall {
			inPin
		}
	}
	complexIdentifier percentCompare_instance at (141, 341) size (14, 3) {
		label at (0, 1)
		methodCall components.lib.percentCompare.calc {
			argumentPin value at (left, 0) connection_52
			argumentPin avg at (left, 1) connection_55 {
				bendpoints (10, 0), (10, -190)
			}
			returnPin at (right, 1) {
				connection_63
			}
			sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier percentCompare_instance1 at (141, 391) size (14, 3) {
		label at (0, 1)
		methodCall components.lib.percentCompare.calc {
			argumentPin value at (left, 0) connection_59
			argumentPin avg at (left, 1) connection_56 {
				bendpoints (10, 0), (10, -140)
			}
			returnPin at (right, 0) {
				connection_65
			}
			sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier percentCompare_instance2 at (141, 441) size (14, 3) {
		label at (0, 1)
		methodCall components.lib.percentCompare.calc {
			argumentPin value at (left, 0) connection_60
			argumentPin avg at (left, 1) connection_57 {
				bendpoints (10, 0), (10, -90)
			}
			returnPin at (right, 0) {
				connection_67
			}
			sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier percentCompare_instance3 at (141, 491) size (14, 3) {
		label at (0, 1)
		methodCall components.lib.percentCompare.calc {
			argumentPin value at (left, 0) connection_61
			argumentPin avg at (left, 1) connection_58 {
				bendpoints (10, 0), (10, -40)
			}
			returnPin at (right, 0) {
				connection_69
			}
			sequenceCall {
				inPin
			}
		}
	}
	simpleIdentifier components.distanceCar.sfl at (11, 345) {
		label at (0, -1)
		inPin outPin {
			connection_52
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier components.distanceCar.avgDistanceCar at (571, 85) {
		label at (0, -1)
		inPin connection_54
		outPin sequenceCall {
			inPin connection_53
		}
	}
	simpleIdentifier components.distanceCar.avgDistanceCar at (11, 545) {
		label at (0, -1)
		inPin outPin {
			connection_56, connection_57, connection_58, connection_55
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier components.distanceCar.sfr at (11, 395) {
		label at (0, -1)
		inPin outPin {
			connection_59
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier components.distanceCar.srl at (11, 445) {
		label at (0, -1)
		inPin outPin {
			connection_60
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier components.distanceCar.srr at (11, 495) {
		label at (0, -1)
		inPin outPin {
			connection_61
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier components.diffWheel.diffFl at (321, 355) {
		label at (0, -1)
		inPin connection_63
		outPin {
			connection_70
		}
		sequenceCall {
			inPin connection_62
		}
	}
	simpleIdentifier components.diffWheel.diffFr at (321, 395) {
		label at (0, -1)
		inPin connection_65
		outPin {
			connection_71
		}
		sequenceCall {
			inPin connection_64
		}
	}
	simpleIdentifier components.diffWheel.diffRl at (321, 445) {
		label at (0, -1)
		inPin connection_67
		outPin {
			connection_72
		}
		sequenceCall {
			inPin connection_66
		}
	}
	simpleIdentifier components.diffWheel.diffRr at (321, 495) {
		label at (0, -1)
		inPin connection_69
		outPin {
			connection_73
		}
		sequenceCall {
			inPin connection_68
		}
	}
	complexIdentifier components.lib.diffCheck at (421, 351) size (13, 3) {
		label at (0, 1)
		methodCall components.lib.diffCheck.calc {
			argumentPin arg at (left, 0) connection_70
			returnPin at (right, 0) {
				connection_85, connection_75
			}
			sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier components.lib.diffCheck at (421, 391) size (13, 3) {
		label at (0, 1)
		methodCall components.lib.diffCheck.calc {
			argumentPin arg at (left, 0) connection_71
			returnPin at (right, 0) {
				connection_84, connection_77
			}
			sequenceCall at (0, 6) {
				inPin
			}
		}
	}
	complexIdentifier components.lib.diffCheck at (421, 441) size (13, 3) {
		label at (0, 1)
		methodCall components.lib.diffCheck.calc {
			argumentPin arg at (left, 0) connection_72
			returnPin at (right, 0) {
				connection_83, connection_79
			}
			sequenceCall at (0, 6) {
				inPin
			}
		}
	}
	complexIdentifier components.lib.diffCheck at (421, 491) size (13, 3) {
		label at (0, 1)
		methodCall components.lib.diffCheck.calc {
			argumentPin arg at (left, 0) connection_73
			returnPin at (right, 0) {
				connection_82, connection_81
			}
			sequenceCall at (0, 6) {
				inPin
			}
		}
	}
	simpleIdentifier components.pressureError.errFl at (611, 355) {
		label at (0, -1)
		inPin connection_75 {
			bendpoints (20, 0), (20, 14)
		}
		sequenceCall {
			inPin connection_74
		}
	}
	simpleIdentifier components.pressureError.errFr at (611, 395) {
		label at (0, -1)
		inPin connection_77 {
			bendpoints (20, 0), (20, 14)
		}
		sequenceCall {
			inPin connection_76
		}
	}
	simpleIdentifier components.pressureError.errRl at (611, 445) {
		label at (0, -1)
		inPin connection_79 {
			bendpoints (20, 0), (20, 14)
		}
		sequenceCall {
			inPin connection_78
		}
	}
	simpleIdentifier components.pressureError.errRr at (611, 495) {
		label at (0, -1)
		inPin connection_81 {
			bendpoints (20, 0), (20, 14)
		}
		sequenceCall {
			inPin connection_80
		}
	}
	or at (611, 526) {
		inPin connection_85 {
			bendpoints (30, 0), (30, 170)
		}
		inPin connection_84 {
			bendpoints (20, 0), (20, 140)
		}
		inPin connection_83 {
			bendpoints (10, 0), (10, 110)
		}
		inPin connection_82 {
			bendpoints (0, 70)
		}
		outPin {
			connection_91, connection_87
		}
	}
	simpleIdentifier components.pressureError.err at (661, 545) {
		label at (0, -1)
		inPin connection_87
		sequenceCall {
			inPin connection_86
		}
	}
	complexIdentifier components.lib.statemaschine at (741, 651) size (14, 8) {
		label at (0, 1)
		methodCall components.lib.statemaschine.calc {
			methodVoidPin at (top, 0) sequenceCall at (-24, -30) {
				inPin connection_89
			}
		}
	}
	if at (661, 611) {
		inPin connection_91 {
			bendpoints (10, 0)
		}
		ifControlFlowOutPin {
			connection_89
		}
		sequenceCall {
			inPin connection_90
		}
	}
	addition at (-239, 56) {
		inPin connection_106 {
			bendpoints (20, 0), (20, 40)
		}
		inPin connection_93
		outPin {
			connection_95
		}
	}
	literal Numeric "2" at (-479, 13) size (49, 0) {
		outPin {
			connection_97
		}
	}
	literal Numeric "17" at (-479, 43) size (49, 0) {
		outPin {
			connection_99
		}
	}
	literal Numeric "7" at (-479, 23) size (49, 0) {
		outPin {
			connection_98
		}
	}
	literal Numeric "0.01" at (-499, 493) size (49, 0) {
		outPin {
			connection_112, connection_113, connection_114, connection_100
		}
	}
	complexIdentifier NoiseGenerator_instance at (-419, 11) size (14, 8) {
		label at (0, 1)
		methodCall components.lib.NoiseGenerator.calc {
			argumentPin argA at (left, 0) connection_97
			argumentPin argC at (left, 2) connection_98
			argumentPin argM at (left, 3) connection_99
			argumentPin scaleGain at (left, 4) connection_100 {
				bendpoints (10, 0), (10, -440)
			}
			returnPin at (right, 0) {
				connection_106
			}
			sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier NoiseGenerator_instance_2 at (-419, 131) size (14, 8) {
		label at (0, 1)
		methodCall components.lib.NoiseGenerator.calc {
			argumentPin argA at (left, 0) connection_110 {
				bendpoints (20, 0), (20, 20)
			}
			argumentPin argC at (left, 1) connection_111 {
				bendpoints (30, 0), (30, 10)
			}
			argumentPin argM at (left, 2) connection_109
			argumentPin scaleGain at (left, 3) connection_112 {
				bendpoints (10, 0), (10, -330)
			}
			returnPin at (right, 0) sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier NoiseGenerator_instance_3 at (-419, 241) size (14, 8) {
		label at (0, 1)
		methodCall components.lib.NoiseGenerator.calc {
			argumentPin argA at (left, 0) argumentPin argC at (left, 1) argumentPin argM at (left, 2) argumentPin scaleGain at (left, 3)
					connection_113 {
				bendpoints (10, 0), (10, -220)
			}
			returnPin at (right, 0) sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier NoiseGenerator_instance_4 at (-419, 351) size (14, 8) {
		label at (0, 1)
		methodCall components.lib.NoiseGenerator.calc {
			argumentPin argA at (left, 0) argumentPin argC at (left, 1) argumentPin argM at (left, 2) argumentPin scaleGain at (left, 3)
					connection_114 {
				bendpoints (10, 0), (10, -110)
			}
			returnPin at (right, 0) sequenceCall {
				inPin
			}
		}
	}
	literal Numeric "17" at (-499, 153) size (49, 0) {
		outPin {
			connection_109
		}
	}
	literal Numeric "17" at (-519, 113) size (49, 0) {
		outPin {
			connection_110
		}
	}
	literal Numeric "17" at (-529, 133) size (49, 0) {
		outPin {
			connection_111
		}
	}
	literal Numeric "17" at (-529, 273) size (49, 0) {
		outPin
	}
	literal Numeric "17" at (-519, 253) size (49, 0) {
		outPin
	}
	literal Numeric "17" at (-499, 293) size (49, 0) {
		outPin
	}
	literal Numeric "17" at (-529, 363) size (49, 0) {
		outPin
	}
	literal Numeric "17" at (-519, 343) size (49, 0) {
		outPin
	}
	literal Numeric "17" at (-499, 383) size (49, 0) {
		outPin
	}
}