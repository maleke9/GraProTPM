classType components.Component
blockdiagramSpecification Main {
	methodBody calc {
		outPin active {
			connection_38, connection_40, connection_42, connection_44, connection_53, connection_62, connection_64, connection_66, connection_68, connection_74, connection_76, connection_78, connection_80, connection_86, connection_90, connection_94, connection_126, connection_129, connection_132
		}
	}
	simpleIdentifier components.veloCar.vfl at (-279, 115) {
		label at (0, -1)
		outPin {
			connection_93
		}
		sequenceCall {
			inPin
		}
	}
	complexIdentifier average_instance at (161, 71) size (18, 22) {
		label at (0, 1)
		methodCall components.lib.average.calc {
			argumentPin arg at (left, 1) connection_30
			argumentPin arg_2 at (left, 7) connection_31
			argumentPin arg_3 at (left, 13) connection_32
			argumentPin arg_4 at (left, 19) connection_33
			returnPin at (right, 0) {
				connection_54
			}
			sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier Integrator_instance at (-59, 71) size (14, 4) {
		label at (0, 1)
		methodCall components.lib.Integrator.integrate {
			argumentPin inputVal at (left, 0) connection_95 {
				bendpoints (130, 0)
			}
			argumentPin dtVal at (left, 2) connection_21 {
				bendpoints (30, 0), (30, -200)
			}
			sequenceCall at (-30, -54) {
				inPin connection_94
			}
		}
		methodCall components.lib.Integrator.outVal {
			returnPin at (right, 1) {
				connection_39
			}
			sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier Integrator_instance1 at (-59, 131) size (14, 4) {
		label at (0, 1)
		methodCall components.lib.Integrator.integrate {
			argumentPin inputVal at (left, 0) connection_127 {
				bendpoints (110, 0)
			}
			argumentPin dtVal at (left, 2) connection_20 {
				bendpoints (30, 0), (30, -140)
			}
			sequenceCall at (-70, -30) {
				inPin connection_126
			}
		}
		methodCall components.lib.Integrator.outVal {
			returnPin at (right, 1) {
				connection_41
			}
			sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier Integrator_instance2 at (-59, 191) size (14, 4) {
		label at (0, 1)
		methodCall components.lib.Integrator.integrate {
			argumentPin inputVal at (left, 0) connection_130 {
				bendpoints (0, -80)
			}
			argumentPin dtVal at (left, 2) connection_19 {
				bendpoints (30, 0), (30, -80)
			}
			sequenceCall at (-70, -30) {
				inPin connection_129
			}
		}
		methodCall components.lib.Integrator.outVal {
			returnPin at (right, 1) {
				connection_43
			}
			sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier Integrator_instance3 at (-59, 251) size (14, 4) {
		label at (0, 1)
		methodCall components.lib.Integrator.integrate {
			argumentPin inputVal at (left, 0) connection_133 {
				bendpoints (-20, 0), (-20, -140), (110, -140)
			}
			argumentPin dtVal at (left, 2) connection_18 {
				bendpoints (30, 0), (30, -20)
			}
			sequenceCall at (-70, -30) {
				inPin connection_132
			}
		}
		methodCall components.lib.Integrator.outVal {
			returnPin at (right, 1) {
				connection_45
			}
			sequenceCall {
				inPin
			}
		}
	}
	simpleIdentifier deltatime at (-189, 295) {
		label at (0, -1)
		inPin outPin {
			connection_19, connection_20, connection_21, connection_18
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier components.distanceCar.sfl at (101, 85) {
		label at (0, -1)
		inPin connection_39
		outPin {
			connection_30
		}
		sequenceCall {
			inPin connection_38
		}
	}
	simpleIdentifier components.distanceCar.sfr at (101, 145) {
		label at (0, -1)
		inPin connection_41
		outPin {
			connection_31
		}
		sequenceCall {
			inPin connection_40
		}
	}
	simpleIdentifier components.distanceCar.srl at (101, 205) {
		label at (0, -1)
		inPin connection_43
		outPin {
			connection_32
		}
		sequenceCall {
			inPin connection_42
		}
	}
	simpleIdentifier components.distanceCar.srr at (101, 265) {
		label at (0, -1)
		inPin connection_45
		outPin {
			connection_33
		}
		sequenceCall {
			inPin connection_44
		}
	}
	simpleIdentifier components.veloCar.vfr at (-279, 175) {
		label at (0, -1)
		outPin {
			connection_125
		}
		sequenceCall {
			inPin
		}
	}
	complexIdentifier percentCompare_instance at (-59, 331) size (14, 3) {
		label at (0, 1)
		methodCall components.lib.percentCompare.calc {
			argumentPin value at (left, 0) connection_52
			argumentPin avg at (left, 1) connection_55 {
				bendpoints (10, 0), (10, -190)
			}
			returnPin at (right, 1) {
				connection_63
			}
			sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier percentCompare_instance1 at (-59, 381) size (14, 3) {
		label at (0, 1)
		methodCall components.lib.percentCompare.calc {
			argumentPin value at (left, 0) connection_59 {
				bendpoints (70, 0)
			}
			argumentPin avg at (left, 1) connection_56 {
				bendpoints (10, 0), (10, -140)
			}
			returnPin at (right, 0) {
				connection_65
			}
			sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier percentCompare_instance2 at (-59, 431) size (14, 3) {
		label at (0, 1)
		methodCall components.lib.percentCompare.calc {
			argumentPin value at (left, 0) connection_60
			argumentPin avg at (left, 1) connection_57 {
				bendpoints (10, 0), (10, -90)
			}
			returnPin at (right, 0) {
				connection_67
			}
			sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier percentCompare_instance3 at (-59, 481) size (14, 3) {
		label at (0, 1)
		methodCall components.lib.percentCompare.calc {
			argumentPin value at (left, 0) connection_61
			argumentPin avg at (left, 1) connection_58 {
				bendpoints (10, 0), (10, -40)
			}
			returnPin at (right, 0) {
				connection_69
			}
			sequenceCall {
				inPin
			}
		}
	}
	simpleIdentifier components.distanceCar.sfl at (-189, 335) {
		label at (0, -1)
		inPin outPin {
			connection_52
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier components.distanceCar.avgDistanceCar at (371, 75) {
		label at (0, -1)
		inPin connection_54
		outPin sequenceCall {
			inPin connection_53
		}
	}
	simpleIdentifier components.distanceCar.avgDistanceCar at (-189, 535) {
		label at (0, -1)
		inPin outPin {
			connection_56, connection_57, connection_58, connection_55
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier components.distanceCar.sfr at (-189, 405) {
		label at (0, -1)
		inPin outPin {
			connection_59
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier components.distanceCar.srl at (-189, 435) {
		label at (0, -1)
		inPin outPin {
			connection_60
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier components.distanceCar.srr at (-189, 485) {
		label at (0, -1)
		inPin outPin {
			connection_61
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier components.diffWheel.diffFl at (121, 345) {
		label at (0, -1)
		inPin connection_63
		outPin {
			connection_70
		}
		sequenceCall {
			inPin connection_62
		}
	}
	simpleIdentifier components.diffWheel.diffFr at (121, 385) {
		label at (0, -1)
		inPin connection_65
		outPin {
			connection_71
		}
		sequenceCall {
			inPin connection_64
		}
	}
	simpleIdentifier components.diffWheel.diffRl at (121, 435) {
		label at (0, -1)
		inPin connection_67
		outPin {
			connection_72
		}
		sequenceCall {
			inPin connection_66
		}
	}
	simpleIdentifier components.diffWheel.diffRr at (121, 485) {
		label at (0, -1)
		inPin connection_69
		outPin {
			connection_73
		}
		sequenceCall {
			inPin connection_68
		}
	}
	complexIdentifier components.lib.diffCheck at (221, 341) size (13, 3) {
		label at (0, 1)
		methodCall components.lib.diffCheck.calc {
			argumentPin arg at (left, 0) connection_70
			returnPin at (right, 0) {
				connection_85, connection_75
			}
			sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier components.lib.diffCheck at (221, 381) size (13, 3) {
		label at (0, 1)
		methodCall components.lib.diffCheck.calc {
			argumentPin arg at (left, 0) connection_71
			returnPin at (right, 0) {
				connection_84, connection_77
			}
			sequenceCall at (0, 6) {
				inPin
			}
		}
	}
	complexIdentifier components.lib.diffCheck at (221, 431) size (13, 3) {
		label at (0, 1)
		methodCall components.lib.diffCheck.calc {
			argumentPin arg at (left, 0) connection_72
			returnPin at (right, 0) {
				connection_83, connection_79
			}
			sequenceCall at (0, 6) {
				inPin
			}
		}
	}
	complexIdentifier components.lib.diffCheck at (221, 481) size (13, 3) {
		label at (0, 1)
		methodCall components.lib.diffCheck.calc {
			argumentPin arg at (left, 0) connection_73
			returnPin at (right, 0) {
				connection_82, connection_81
			}
			sequenceCall at (0, 6) {
				inPin
			}
		}
	}
	simpleIdentifier components.pressureError.errFl at (411, 345) {
		label at (0, -1)
		inPin connection_75 {
			bendpoints (20, 0), (20, 14)
		}
		sequenceCall {
			inPin connection_74
		}
	}
	simpleIdentifier components.pressureError.errFr at (411, 385) {
		label at (0, -1)
		inPin connection_77 {
			bendpoints (20, 0), (20, 14)
		}
		sequenceCall {
			inPin connection_76
		}
	}
	simpleIdentifier components.pressureError.errRl at (411, 435) {
		label at (0, -1)
		inPin connection_79 {
			bendpoints (20, 0), (20, 14)
		}
		sequenceCall {
			inPin connection_78
		}
	}
	simpleIdentifier components.pressureError.errRr at (411, 485) {
		label at (0, -1)
		inPin connection_81 {
			bendpoints (20, 0), (20, 14)
		}
		sequenceCall {
			inPin connection_80
		}
	}
	or at (391, 176) {
		inPin connection_85 {
			bendpoints (30, 0)
		}
		inPin connection_84 {
			bendpoints (20, 0), (20, -200)
		}
		inPin connection_83 {
			bendpoints (10, 0), (10, -230)
		}
		inPin connection_82 {
			bendpoints (0, -270)
		}
		outPin {
			connection_91, connection_87
		}
	}
	simpleIdentifier components.pressureError.err at (481, 115) {
		label at (0, -1)
		inPin connection_87 {
			bendpoints (10, 0), (10, -80)
		}
		sequenceCall {
			inPin connection_86
		}
	}
	complexIdentifier components.lib.statemaschine at (541, 201) size (14, 8) {
		label at (0, 1)
		methodCall components.lib.statemaschine.calc {
			methodVoidPin at (top, 0) sequenceCall at (-24, -30) {
				inPin connection_89
			}
		}
	}
	if at (461, 161) {
		inPin connection_91 {
			bendpoints (20, 0), (20, -30)
		}
		ifControlFlowOutPin {
			connection_89
		}
		sequenceCall {
			inPin connection_90
		}
	}
	addition at (-239, 56) {
		inPin connection_106 {
			bendpoints (20, 0), (20, 30)
		}
		inPin connection_93
		outPin {
			connection_95
		}
	}
	literal Numeric "2" at (-509, 13) size (49, 0) {
		outPin {
			connection_97
		}
	}
	literal Numeric "17" at (-509, 43) size (49, 0) {
		outPin {
			connection_99
		}
	}
	literal Numeric "7" at (-509, 23) size (49, 0) {
		outPin {
			connection_98
		}
	}
	literal Numeric "0.01" at (-499, 493) size (49, 0) {
		outPin {
			connection_112, connection_113, connection_114, connection_100
		}
	}
	complexIdentifier NoiseGenerator_instance at (-419, 21) size (14, 8) {
		label at (0, 1)
		methodCall components.lib.NoiseGenerator.calc {
			argumentPin argA at (left, 0) connection_97 {
				bendpoints (30, 0)
			}
			argumentPin argC at (left, 2) connection_98 {
				bendpoints (30, 0)
			}
			argumentPin argM at (left, 3) connection_99 {
				bendpoints (30, 0)
			}
			argumentPin scaleGain at (left, 4) connection_100 {
				bendpoints (10, 0), (10, -430)
			}
			returnPin at (right, 0) {
				connection_106
			}
			sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier NoiseGenerator_instance_2 at (-419, 131) size (14, 8) {
		label at (0, 1)
		methodCall components.lib.NoiseGenerator.calc {
			argumentPin argA at (left, 0) connection_110 {
				bendpoints (10, 0), (10, 20)
			}
			argumentPin argC at (left, 1) connection_111 {
				bendpoints (10, 0), (10, 10)
			}
			argumentPin argM at (left, 2) connection_109
			argumentPin scaleGain at (left, 3) connection_112 {
				bendpoints (10, 0), (10, -330)
			}
			returnPin at (right, 0) {
				connection_123
			}
			sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier NoiseGenerator_instance_3 at (-419, 241) size (14, 8) {
		label at (0, 1)
		methodCall components.lib.NoiseGenerator.calc {
			argumentPin argA at (left, 0) connection_118 {
				bendpoints (20, 0), (20, -10)
			}
			argumentPin argC at (left, 1) connection_119 {
				bendpoints (20, 0), (20, -20)
			}
			argumentPin argM at (left, 2) connection_120 {
				bendpoints (20, 0), (20, -30)
			}
			argumentPin scaleGain at (left, 3) connection_113 {
				bendpoints (10, 0), (10, -220)
			}
			returnPin at (right, 0) {
				connection_122
			}
			sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier NoiseGenerator_instance_4 at (-419, 351) size (14, 8) {
		label at (0, 1)
		methodCall components.lib.NoiseGenerator.calc {
			argumentPin argA at (left, 0) connection_115 {
				bendpoints (20, 0), (20, 10)
			}
			argumentPin argC at (left, 1) connection_116
			argumentPin argM at (left, 2) connection_117 {
				bendpoints (20, 0), (20, -10)
			}
			argumentPin scaleGain at (left, 3) connection_114 {
				bendpoints (10, 0), (10, -110)
			}
			returnPin at (right, 0) {
				connection_121
			}
			sequenceCall {
				inPin
			}
		}
	}
	literal Numeric "17" at (-509, 153) size (49, 0) {
		outPin {
			connection_109
		}
	}
	literal Numeric "3" at (-509, 113) size (49, 0) {
		outPin {
			connection_110
		}
	}
	literal Numeric "9" at (-509, 133) size (49, 0) {
		outPin {
			connection_111
		}
	}
	literal Numeric "7" at (-509, 273) size (49, 0) {
		outPin {
			connection_119
		}
	}
	literal Numeric "2" at (-509, 253) size (49, 0) {
		outPin {
			connection_118
		}
	}
	literal Numeric "17" at (-509, 293) size (49, 0) {
		outPin {
			connection_120
		}
	}
	literal Numeric "11" at (-509, 363) size (49, 0) {
		outPin {
			connection_116
		}
	}
	literal Numeric "4" at (-509, 343) size (49, 0) {
		outPin {
			connection_115
		}
	}
	literal Numeric "17" at (-509, 383) size (49, 0) {
		outPin {
			connection_117
		}
	}
	addition at (-219, 136) {
		inPin connection_123
		inPin connection_125 {
			bendpoints (20, 0)
		}
		outPin {
			connection_127
		}
	}
	addition at (-229, 266) {
		inPin connection_122 {
			bendpoints (20, 0), (20, 20)
		}
		inPin connection_128 {
			bendpoints (10, 0)
		}
		outPin {
			connection_130
		}
	}
	addition at (-219, 376) {
		inPin connection_121 {
			bendpoints (30, 0), (30, 20)
		}
		inPin connection_131
		outPin {
			connection_133
		}
	}
	simpleIdentifier components.veloCar.vrl at (-279, 295) {
		label at (0, -1)
		outPin {
			connection_128
		}
		sequenceCall {
			inPin
		}
	}
	simpleIdentifier components.veloCar.vrr at (-279, 395) {
		label at (0, -1)
		outPin {
			connection_131
		}
		sequenceCall {
			inPin
		}
	}
}